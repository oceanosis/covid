#!/usr/bin/env bash
set -e

BASE="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source "$BASE/setEnvVars"

# Superuser settings
POSTGRES_USER="docker"
POSTGRES_DB="docker"
POSTGRES_PASSWORD="docker"

#POSTGRES_INITDB_ARGS=
PGDATA="$BASE/dbdata"
POSTGRES_INITDB_WALDIR="$BASE/logs"
POSTGRES_HOST_AUTH_METHOD=
POSTGRESQL_CONF="$BASE/conf/postgresql.conf"

# New db for development
INIT_DB_SQL="$BASE/conf/initdb.sql"

docker stop $DB_CONTAINER_NAME  || true && docker rm $DB_CONTAINER_NAME || true

[ -d $PGDATA ] || mkdir -p "$PGDATA"

[ -d POSTGRES_INITDB_WALDIR ] || mkdir -p "$POSTGRES_INITDB_WALDIR"


docker run -d --name $DB_CONTAINER_NAME \
	   -v "$PGDATA":"/var/lib/postgresql/data" \
	   -e POSTGRES_USER=$POSTGRES_USER \
	   -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
	   -e POSTGRES_INITDB_WALDIR=$POSTGRES_INITDB_WALDIR \
	   -v "$POSTGRESQL_CONF":"/etc/postgresql/postgresql.conf" \
	   -v "$INIT_DB_SQL":"/docker-entrypoint-initdb.d/initdb.sql"  \
	   $PSQL_BUILD postgres -c 'config_file=/etc/postgresql/postgresql.conf' || false


# Other options:
#      -e "POSTGRES_INITDB_ARGS="

# To test connection;
#  docker exec -it devdb sh -c 'exec psql  -U docker -d covid'
exit 0;
